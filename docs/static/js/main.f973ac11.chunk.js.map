{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","placeholder","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","item","id","title","images","downsized_medium","GifGridItem","img","deleteImageG","className","src","alt","onClick","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","setImages","deleteImage","filter","i","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAkCeA,MA/Bf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACFC,mBAAS,IADP,mBAC/BC,EAD+B,KACnBC,EADmB,KAetC,OACE,0BAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAOT,EACPU,YAAY,uBACZC,SAAU,SAACR,GAAD,OAlBU,SAACA,GACzBF,EAAcE,EAAES,OAAOH,OAiBFI,CAAkBV,Q,uBCxB9BW,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKGI,MAAMF,GALT,cAKfG,EALe,gBAMEA,EAAUC,OANZ,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAU,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAG,UAAEQ,EAAKG,cAAP,aAAE,EAAaC,iBAAiBZ,QAZlB,kBAgBdM,GAhBc,4CAAH,sDCcLO,MAZf,YAA6C,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,aAC1B,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKH,EAAId,IAAKkB,IAAKJ,EAAIJ,QAC5B,2BAAII,EAAIJ,OACR,4BAAQS,QAAS,kBAAMJ,EAAaD,EAAIL,KAAKO,UAAU,kBAAvD,cCiCSI,MApCf,YAAgC,IAAbtB,EAAY,EAAZA,SAAY,ECDH,SAACA,GAAc,IAAD,EACdhB,mBAAS,CACjCuB,KAAM,GACNgB,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACR3B,EAAQC,GAAU2B,MAAK,SAACC,GAEtBH,EAAS,CACPlB,KAAMqB,EACNL,SAAS,SAIZ,CAACvB,IAEGwB,EDfmBK,CAAa7B,GAA/BO,EADqB,EACrBA,KAAMgB,EADe,EACfA,QADe,EAEDvC,mBAASuB,GAFR,mBAEtBM,EAFsB,KAEdiB,EAFc,KAI7BJ,qBAAU,WACRI,EAAUvB,KACT,CAACA,IAEJ,IAAMwB,EAAc,SAACpB,GACnBmB,EAAUjB,EAAOmB,QAAO,SAACC,GAAD,OAAOA,EAAEtB,KAAOA,OAG1C,OACE,oCACE,wBAAIO,UAAU,uBAAuBlB,GACpCuB,GACC,yBAAKL,UAAU,oCAAf,YAGF,6BACE,wBAAIA,UAAU,aACXL,EAAOJ,KAAI,SAACC,GACX,OACE,kBAAC,EAAD,CACEwB,IAAKxB,EAAKC,GACVK,IAAKN,EACLO,aAAcc,WEHfI,MAvBf,WAAyB,IAAD,EACcnD,mBAAS,CAAC,gBADxB,mBACfoD,EADe,KACHrD,EADG,KAOtB,OACE,oCACE,8CACA,6BAEA,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,4BACGqD,EAAW3B,KAAI,SAACC,GACf,OAAO,kBAAC,EAAD,CAASwB,IAAKxB,EAAMV,SAAUU,U,MCf/C2B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.f973ac11.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AddCategory({ setCategories }) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSumit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cat) => [inputValue, ...cat]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSumit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        placeholder=\"Escribe la categoria\"\r\n        onChange={(e) => handleInputChange(e)}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=bQqndn7qzYt1AGe1govPVYvIPRcVsPWS`;\r\n\r\n  const respuesta = await fetch(url);\r\n  const { data } = await respuesta.json();\r\n\r\n  const gifs = data.map((item) => {\r\n    return {\r\n      id: item.id,\r\n      title: item.title,\r\n      url: item.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nfunction GifGridItem({ img, deleteImageG }) {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={img.url} alt={img.title} />\r\n      <p>{img.title}</p>\r\n      <button onClick={() => deleteImageG(img.id)} className=\"button-primary\">\r\n        Eliminar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"../components/GifGridItem\";\r\n\r\nfunction GifGrid({ category }) {\r\n  const { data, loading } = useFetchGifs(category);\r\n  const [images, setImages] = useState(data);\r\n\r\n  useEffect(() => {\r\n    setImages(data);\r\n  }, [data]);\r\n\r\n  const deleteImage = (id) => {\r\n    setImages(images.filter((i) => i.id !== id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"animate__fadeInDown\">{category}</h2>\r\n      {loading && (\r\n        <div className=\"animate__animated animate__flash\">Cargando</div>\r\n      )}\r\n\r\n      <div>\r\n        <ol className=\"card-grid\">\r\n          {images.map((item) => {\r\n            return (\r\n              <GifGridItem\r\n                key={item.id}\r\n                img={item}\r\n                deleteImageG={deleteImage}\r\n              />\r\n            );\r\n          })}\r\n        </ol>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"./../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      // setTimeout(() => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n      // }, 3000);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport GifGrid from \"./../components/GifGrid\";\r\n\r\nfunction GifExpertApp() {\r\n  const [categories, setCategories] = useState([\"Dragon ball\"]);\r\n\r\n  //   const handleAdd = () => {\r\n  //     setCategories([...categories, \"Nueva categoria\"]);\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif expert app</h2>\r\n      <hr />\r\n\r\n      <AddCategory setCategories={setCategories} />\r\n\r\n      <ol>\r\n        {categories.map((item) => {\r\n          return <GifGrid key={item} category={item} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./components/GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}